name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  DOCKERHUB_REPOSITORY: mosathip/node-alpine-with-python
  NODE_VERSION: 18.20.8
  PYTHON_VERSION: 3.10.18

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-24.04
            platform: linux/amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPOSITORY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.DOCKERHUB_REPOSITORY }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate Docker tags
        id: vars
        run: |
          NODE_VERSION=${NODE_VERSION}
          PYTHON_VERSION=${PYTHON_VERSION}

          NODE_MAJOR=$(echo $NODE_VERSION | cut -d. -f1)
          NODE_MINOR=$(echo $NODE_VERSION | cut -d. -f1,2)
          NODE_PATCH=$NODE_VERSION

          PYTHON_MAJOR=$(echo $PYTHON_VERSION | cut -d. -f1)
          PYTHON_MINOR=$(echo $PYTHON_VERSION | cut -d. -f1,2)
          PYTHON_PATCH=$PYTHON_VERSION

          TAGS=(
            "${NODE_PATCH}-${PYTHON_PATCH}"
            "${NODE_PATCH}-${PYTHON_MINOR}"
            "${NODE_MINOR}-${PYTHON_PATCH}"
            "${NODE_MINOR}-${PYTHON_MINOR}"
            "${NODE_MAJOR}-${PYTHON_PATCH}"
            "${NODE_MAJOR}-${PYTHON_MINOR}"
          )

          TAGS_ARG=""
          for TAG in "${TAGS[@]}"; do
            TAGS_ARG="$TAGS_ARG --tag $DOCKERHUB_REPOSITORY:$TAG"
          done
          echo "TAGS_ARG=${TAGS_ARG}" >> $GITHUB_OUTPUT

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create ${{ steps.vars.outputs.TAGS_ARG }} \
            $(printf '${{ env.DOCKERHUB_REPOSITORY }}@sha256:%s ' *)

